server {
    listen 80;
    server_name api.proektus.site;

    location / {
        return 301 https://$host$request_uri;
    }

    client_max_body_size 100M;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}


server {
    listen 443 ssl http2;
    server_name api.proektus.site;
    root /var/www/html/public;

    client_max_body_size 100M;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/api.proektus.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.proektus.site/privkey.pem;

    # Include recommended SSL parameters
    # You can generate these using: https://ssl-config.mozilla.org/
    # Example (replace with your generated config):
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m; # about 40000 sessions
    ssl_session_tickets off;
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"; # Uncomment if you are sure about HTTPS only

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    index index.php;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }

    # Certbot ACME challenge (also needed for renewal in HTTPS block if HTTP is fully disabled later)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # websocker (reverb)
    location / {
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Scheme $scheme;
            proxy_set_header SERVER_PORT $server_port;
            proxy_set_header REMOTE_ADDR $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            proxy_pass http://0.0.0.0:8080;
        }
}
